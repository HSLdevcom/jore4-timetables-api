/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.passing_times


import fi.hsl.jore.jore4.jooq.DefaultCatalog
import fi.hsl.jore.jore4.jooq.passing_times.tables.GetPassingTimeOrderValidityData
import fi.hsl.jore.jore4.jooq.passing_times.tables.TimetabledPassingTime

import java.util.UUID

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Configuration
import org.jooq.Field
import org.jooq.Record
import org.jooq.Result
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PassingTimes : SchemaImpl("passing_times", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>passing_times</code>
         */
        val PASSING_TIMES = PassingTimes()
    }

    /**
     * The table <code>passing_times.get_passing_time_order_validity_data</code>.
     */
    val GET_PASSING_TIME_ORDER_VALIDITY_DATA get() = GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA

    /**
     * Call <code>passing_times.get_passing_time_order_validity_data</code>.
     */
    fun GET_PASSING_TIME_ORDER_VALIDITY_DATA(
          configuration: Configuration
        , filterVehicleJourneyIds: Array<UUID?>?
        , filterJourneyPatternRefIds: Array<UUID?>?
    ): Result<Record> = configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.passing_times.tables.GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA.call(
          filterVehicleJourneyIds
        , filterJourneyPatternRefIds
    )).fetch()

    /**
     * Get <code>passing_times.get_passing_time_order_validity_data</code> as a table.
     */
    fun GET_PASSING_TIME_ORDER_VALIDITY_DATA(
          filterVehicleJourneyIds: Array<UUID?>?
        , filterJourneyPatternRefIds: Array<UUID?>?
    ): GetPassingTimeOrderValidityData = fi.hsl.jore.jore4.jooq.passing_times.tables.GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA.call(
          filterVehicleJourneyIds
        , filterJourneyPatternRefIds
    )

    /**
     * Get <code>passing_times.get_passing_time_order_validity_data</code> as a table.
     */
    fun GET_PASSING_TIME_ORDER_VALIDITY_DATA(
          filterVehicleJourneyIds: Field<Array<UUID?>?>
        , filterJourneyPatternRefIds: Field<Array<UUID?>?>
    ): GetPassingTimeOrderValidityData = fi.hsl.jore.jore4.jooq.passing_times.tables.GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA.call(
          filterVehicleJourneyIds
        , filterJourneyPatternRefIds
    )

    /**
     * Long-term planned time data concerning public transport vehicles passing a particular POINT IN JOURNEY PATTERN on a specified VEHICLE JOURNEY for a certain DAY TYPE. Transmodel: https://www.transmodel-cen.eu/model/index.htm?goto=3:4:946 
     */
    val TIMETABLED_PASSING_TIME get() = TimetabledPassingTime.TIMETABLED_PASSING_TIME

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA,
        TimetabledPassingTime.TIMETABLED_PASSING_TIME
    )
}
