/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.information_schema.tables.references


import fi.hsl.jore.jore4.jooq.information_schema.tables.AdministrableRoleAuthorizations
import fi.hsl.jore.jore4.jooq.information_schema.tables.ApplicableRoles
import fi.hsl.jore.jore4.jooq.information_schema.tables.Attributes
import fi.hsl.jore.jore4.jooq.information_schema.tables.CharacterSets
import fi.hsl.jore.jore4.jooq.information_schema.tables.CheckConstraintRoutineUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.CheckConstraints
import fi.hsl.jore.jore4.jooq.information_schema.tables.CollationCharacterSetApplicability
import fi.hsl.jore.jore4.jooq.information_schema.tables.Collations
import fi.hsl.jore.jore4.jooq.information_schema.tables.ColumnColumnUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.ColumnDomainUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.ColumnOptions
import fi.hsl.jore.jore4.jooq.information_schema.tables.ColumnPrivileges
import fi.hsl.jore.jore4.jooq.information_schema.tables.ColumnUdtUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.Columns
import fi.hsl.jore.jore4.jooq.information_schema.tables.ConstraintColumnUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.ConstraintTableUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.DataTypePrivileges
import fi.hsl.jore.jore4.jooq.information_schema.tables.DomainConstraints
import fi.hsl.jore.jore4.jooq.information_schema.tables.DomainUdtUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.Domains
import fi.hsl.jore.jore4.jooq.information_schema.tables.ElementTypes
import fi.hsl.jore.jore4.jooq.information_schema.tables.EnabledRoles
import fi.hsl.jore.jore4.jooq.information_schema.tables.ForeignDataWrapperOptions
import fi.hsl.jore.jore4.jooq.information_schema.tables.ForeignDataWrappers
import fi.hsl.jore.jore4.jooq.information_schema.tables.ForeignServerOptions
import fi.hsl.jore.jore4.jooq.information_schema.tables.ForeignServers
import fi.hsl.jore.jore4.jooq.information_schema.tables.ForeignTableOptions
import fi.hsl.jore.jore4.jooq.information_schema.tables.ForeignTables
import fi.hsl.jore.jore4.jooq.information_schema.tables.InformationSchemaCatalogName
import fi.hsl.jore.jore4.jooq.information_schema.tables.KeyColumnUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.Parameters
import fi.hsl.jore.jore4.jooq.information_schema.tables.ReferentialConstraints
import fi.hsl.jore.jore4.jooq.information_schema.tables.RoleColumnGrants
import fi.hsl.jore.jore4.jooq.information_schema.tables.RoleRoutineGrants
import fi.hsl.jore.jore4.jooq.information_schema.tables.RoleTableGrants
import fi.hsl.jore.jore4.jooq.information_schema.tables.RoleUdtGrants
import fi.hsl.jore.jore4.jooq.information_schema.tables.RoleUsageGrants
import fi.hsl.jore.jore4.jooq.information_schema.tables.RoutinePrivileges
import fi.hsl.jore.jore4.jooq.information_schema.tables.Routines
import fi.hsl.jore.jore4.jooq.information_schema.tables.Schemata
import fi.hsl.jore.jore4.jooq.information_schema.tables.Sequences
import fi.hsl.jore.jore4.jooq.information_schema.tables.SqlFeatures
import fi.hsl.jore.jore4.jooq.information_schema.tables.SqlImplementationInfo
import fi.hsl.jore.jore4.jooq.information_schema.tables.SqlLanguages
import fi.hsl.jore.jore4.jooq.information_schema.tables.SqlPackages
import fi.hsl.jore.jore4.jooq.information_schema.tables.SqlSizing
import fi.hsl.jore.jore4.jooq.information_schema.tables.SqlSizingProfiles
import fi.hsl.jore.jore4.jooq.information_schema.tables.TableConstraints
import fi.hsl.jore.jore4.jooq.information_schema.tables.TablePrivileges
import fi.hsl.jore.jore4.jooq.information_schema.tables.TriggeredUpdateColumns
import fi.hsl.jore.jore4.jooq.information_schema.tables.Triggers
import fi.hsl.jore.jore4.jooq.information_schema.tables.UdtPrivileges
import fi.hsl.jore.jore4.jooq.information_schema.tables.UsagePrivileges
import fi.hsl.jore.jore4.jooq.information_schema.tables.UserDefinedTypes
import fi.hsl.jore.jore4.jooq.information_schema.tables.UserMappingOptions
import fi.hsl.jore.jore4.jooq.information_schema.tables.UserMappings
import fi.hsl.jore.jore4.jooq.information_schema.tables.ViewColumnUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.ViewRoutineUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.ViewTableUsage
import fi.hsl.jore.jore4.jooq.information_schema.tables.Views
import fi.hsl.jore.jore4.jooq.information_schema.tables._PgExpandarray

import org.jooq.Configuration
import org.jooq.Field
import org.jooq.Record
import org.jooq.Result



/**
 * The table <code>information_schema._pg_expandarray</code>.
 */
val _PG_EXPANDARRAY = _PgExpandarray._PG_EXPANDARRAY
@Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun _PG_EXPANDARRAY(
      configuration: Configuration
    , __1: Any?
): Result<Record> = configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.information_schema.tables._PgExpandarray._PG_EXPANDARRAY.call(
      __1
)).fetch()
@Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun _PG_EXPANDARRAY(
      __1: Any?
): _PgExpandarray = fi.hsl.jore.jore4.jooq.information_schema.tables._PgExpandarray._PG_EXPANDARRAY.call(
      __1
)
@Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun _PG_EXPANDARRAY(
      __1: Field<Any?>
): _PgExpandarray = fi.hsl.jore.jore4.jooq.information_schema.tables._PgExpandarray._PG_EXPANDARRAY.call(
      __1
)

/**
 * The table <code>information_schema.administrable_role_authorizations</code>.
 */
val ADMINISTRABLE_ROLE_AUTHORIZATIONS = AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS

/**
 * The table <code>information_schema.applicable_roles</code>.
 */
val APPLICABLE_ROLES = ApplicableRoles.APPLICABLE_ROLES

/**
 * The table <code>information_schema.attributes</code>.
 */
val ATTRIBUTES = Attributes.ATTRIBUTES

/**
 * The table <code>information_schema.character_sets</code>.
 */
val CHARACTER_SETS = CharacterSets.CHARACTER_SETS

/**
 * The table <code>information_schema.check_constraint_routine_usage</code>.
 */
val CHECK_CONSTRAINT_ROUTINE_USAGE = CheckConstraintRoutineUsage.CHECK_CONSTRAINT_ROUTINE_USAGE

/**
 * The table <code>information_schema.check_constraints</code>.
 */
val CHECK_CONSTRAINTS = CheckConstraints.CHECK_CONSTRAINTS

/**
 * The table <code>information_schema.collation_character_set_applicability</code>.
 */
val COLLATION_CHARACTER_SET_APPLICABILITY = CollationCharacterSetApplicability.COLLATION_CHARACTER_SET_APPLICABILITY

/**
 * The table <code>information_schema.collations</code>.
 */
val COLLATIONS = Collations.COLLATIONS

/**
 * The table <code>information_schema.column_column_usage</code>.
 */
val COLUMN_COLUMN_USAGE = ColumnColumnUsage.COLUMN_COLUMN_USAGE

/**
 * The table <code>information_schema.column_domain_usage</code>.
 */
val COLUMN_DOMAIN_USAGE = ColumnDomainUsage.COLUMN_DOMAIN_USAGE

/**
 * The table <code>information_schema.column_options</code>.
 */
val COLUMN_OPTIONS = ColumnOptions.COLUMN_OPTIONS

/**
 * The table <code>information_schema.column_privileges</code>.
 */
val COLUMN_PRIVILEGES = ColumnPrivileges.COLUMN_PRIVILEGES

/**
 * The table <code>information_schema.column_udt_usage</code>.
 */
val COLUMN_UDT_USAGE = ColumnUdtUsage.COLUMN_UDT_USAGE

/**
 * The table <code>information_schema.columns</code>.
 */
val COLUMNS = Columns.COLUMNS

/**
 * The table <code>information_schema.constraint_column_usage</code>.
 */
val CONSTRAINT_COLUMN_USAGE = ConstraintColumnUsage.CONSTRAINT_COLUMN_USAGE

/**
 * The table <code>information_schema.constraint_table_usage</code>.
 */
val CONSTRAINT_TABLE_USAGE = ConstraintTableUsage.CONSTRAINT_TABLE_USAGE

/**
 * The table <code>information_schema.data_type_privileges</code>.
 */
val DATA_TYPE_PRIVILEGES = DataTypePrivileges.DATA_TYPE_PRIVILEGES

/**
 * The table <code>information_schema.domain_constraints</code>.
 */
val DOMAIN_CONSTRAINTS = DomainConstraints.DOMAIN_CONSTRAINTS

/**
 * The table <code>information_schema.domain_udt_usage</code>.
 */
val DOMAIN_UDT_USAGE = DomainUdtUsage.DOMAIN_UDT_USAGE

/**
 * The table <code>information_schema.domains</code>.
 */
val DOMAINS = Domains.DOMAINS

/**
 * The table <code>information_schema.element_types</code>.
 */
val ELEMENT_TYPES = ElementTypes.ELEMENT_TYPES

/**
 * The table <code>information_schema.enabled_roles</code>.
 */
val ENABLED_ROLES = EnabledRoles.ENABLED_ROLES

/**
 * The table <code>information_schema.foreign_data_wrapper_options</code>.
 */
val FOREIGN_DATA_WRAPPER_OPTIONS = ForeignDataWrapperOptions.FOREIGN_DATA_WRAPPER_OPTIONS

/**
 * The table <code>information_schema.foreign_data_wrappers</code>.
 */
val FOREIGN_DATA_WRAPPERS = ForeignDataWrappers.FOREIGN_DATA_WRAPPERS

/**
 * The table <code>information_schema.foreign_server_options</code>.
 */
val FOREIGN_SERVER_OPTIONS = ForeignServerOptions.FOREIGN_SERVER_OPTIONS

/**
 * The table <code>information_schema.foreign_servers</code>.
 */
val FOREIGN_SERVERS = ForeignServers.FOREIGN_SERVERS

/**
 * The table <code>information_schema.foreign_table_options</code>.
 */
val FOREIGN_TABLE_OPTIONS = ForeignTableOptions.FOREIGN_TABLE_OPTIONS

/**
 * The table <code>information_schema.foreign_tables</code>.
 */
val FOREIGN_TABLES = ForeignTables.FOREIGN_TABLES

/**
 * The table <code>information_schema.information_schema_catalog_name</code>.
 */
val INFORMATION_SCHEMA_CATALOG_NAME = InformationSchemaCatalogName.INFORMATION_SCHEMA_CATALOG_NAME

/**
 * The table <code>information_schema.key_column_usage</code>.
 */
val KEY_COLUMN_USAGE = KeyColumnUsage.KEY_COLUMN_USAGE

/**
 * The table <code>information_schema.parameters</code>.
 */
val PARAMETERS = Parameters.PARAMETERS

/**
 * The table <code>information_schema.referential_constraints</code>.
 */
val REFERENTIAL_CONSTRAINTS = ReferentialConstraints.REFERENTIAL_CONSTRAINTS

/**
 * The table <code>information_schema.role_column_grants</code>.
 */
val ROLE_COLUMN_GRANTS = RoleColumnGrants.ROLE_COLUMN_GRANTS

/**
 * The table <code>information_schema.role_routine_grants</code>.
 */
val ROLE_ROUTINE_GRANTS = RoleRoutineGrants.ROLE_ROUTINE_GRANTS

/**
 * The table <code>information_schema.role_table_grants</code>.
 */
val ROLE_TABLE_GRANTS = RoleTableGrants.ROLE_TABLE_GRANTS

/**
 * The table <code>information_schema.role_udt_grants</code>.
 */
val ROLE_UDT_GRANTS = RoleUdtGrants.ROLE_UDT_GRANTS

/**
 * The table <code>information_schema.role_usage_grants</code>.
 */
val ROLE_USAGE_GRANTS = RoleUsageGrants.ROLE_USAGE_GRANTS

/**
 * The table <code>information_schema.routine_privileges</code>.
 */
val ROUTINE_PRIVILEGES = RoutinePrivileges.ROUTINE_PRIVILEGES

/**
 * The table <code>information_schema.routines</code>.
 */
val ROUTINES = Routines.ROUTINES

/**
 * The table <code>information_schema.schemata</code>.
 */
val SCHEMATA = Schemata.SCHEMATA

/**
 * The table <code>information_schema.sequences</code>.
 */
val SEQUENCES = Sequences.SEQUENCES

/**
 * The table <code>information_schema.sql_features</code>.
 */
val SQL_FEATURES = SqlFeatures.SQL_FEATURES

/**
 * The table <code>information_schema.sql_implementation_info</code>.
 */
val SQL_IMPLEMENTATION_INFO = SqlImplementationInfo.SQL_IMPLEMENTATION_INFO

/**
 * The table <code>information_schema.sql_languages</code>.
 */
val SQL_LANGUAGES = SqlLanguages.SQL_LANGUAGES

/**
 * The table <code>information_schema.sql_packages</code>.
 */
val SQL_PACKAGES = SqlPackages.SQL_PACKAGES

/**
 * The table <code>information_schema.sql_sizing</code>.
 */
val SQL_SIZING = SqlSizing.SQL_SIZING

/**
 * The table <code>information_schema.sql_sizing_profiles</code>.
 */
val SQL_SIZING_PROFILES = SqlSizingProfiles.SQL_SIZING_PROFILES

/**
 * The table <code>information_schema.table_constraints</code>.
 */
val TABLE_CONSTRAINTS = TableConstraints.TABLE_CONSTRAINTS

/**
 * The table <code>information_schema.table_privileges</code>.
 */
val TABLE_PRIVILEGES = TablePrivileges.TABLE_PRIVILEGES

/**
 * The table <code>information_schema.tables</code>.
 */
val TABLES = fi.hsl.jore.jore4.jooq.information_schema.tables.Tables.TABLES

/**
 * The table <code>information_schema.triggered_update_columns</code>.
 */
val TRIGGERED_UPDATE_COLUMNS = TriggeredUpdateColumns.TRIGGERED_UPDATE_COLUMNS

/**
 * The table <code>information_schema.triggers</code>.
 */
val TRIGGERS = Triggers.TRIGGERS

/**
 * The table <code>information_schema.udt_privileges</code>.
 */
val UDT_PRIVILEGES = UdtPrivileges.UDT_PRIVILEGES

/**
 * The table <code>information_schema.usage_privileges</code>.
 */
val USAGE_PRIVILEGES = UsagePrivileges.USAGE_PRIVILEGES

/**
 * The table <code>information_schema.user_defined_types</code>.
 */
val USER_DEFINED_TYPES = UserDefinedTypes.USER_DEFINED_TYPES

/**
 * The table <code>information_schema.user_mapping_options</code>.
 */
val USER_MAPPING_OPTIONS = UserMappingOptions.USER_MAPPING_OPTIONS

/**
 * The table <code>information_schema.user_mappings</code>.
 */
val USER_MAPPINGS = UserMappings.USER_MAPPINGS

/**
 * The table <code>information_schema.view_column_usage</code>.
 */
val VIEW_COLUMN_USAGE = ViewColumnUsage.VIEW_COLUMN_USAGE

/**
 * The table <code>information_schema.view_routine_usage</code>.
 */
val VIEW_ROUTINE_USAGE = ViewRoutineUsage.VIEW_ROUTINE_USAGE

/**
 * The table <code>information_schema.view_table_usage</code>.
 */
val VIEW_TABLE_USAGE = ViewTableUsage.VIEW_TABLE_USAGE

/**
 * The table <code>information_schema.views</code>.
 */
val VIEWS = Views.VIEWS
