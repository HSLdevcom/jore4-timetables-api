/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.`public`.routines.references


import java.math.BigDecimal
import java.time.LocalDate
import java.time.LocalDateTime
import java.time.LocalTime
import java.time.OffsetDateTime
import java.time.OffsetTime
import java.util.UUID

import org.jooq.Configuration
import org.jooq.Field
import org.jooq.Record
import org.jooq.Result
import org.jooq.types.YearToSecond



/**
 * Call <code>public.armor</code>
 */
fun armor1(
      configuration: Configuration
    , __1: ByteArray?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Armor1()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.armor</code> as a field.
 */
fun armor1(
      __1: ByteArray?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Armor1()
    f.set__1(__1)

    return f.asField()
}

/**
 * Get <code>public.armor</code> as a field.
 */
fun armor1(
      __1: Field<ByteArray?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Armor1()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.armor</code>
 */
fun armor2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: Array<String?>?
    , __3: Array<String?>?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Armor2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.armor</code> as a field.
 */
fun armor2(
      __1: ByteArray?
    , __2: Array<String?>?
    , __3: Array<String?>?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Armor2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.armor</code> as a field.
 */
fun armor2(
      __1: Field<ByteArray?>
    , __2: Field<Array<String?>?>
    , __3: Field<Array<String?>?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Armor2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun cashDist(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.CashDist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun cashDist(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.CashDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun cashDist(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.CashDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.crypt</code>
 */
fun crypt(
      configuration: Configuration
    , __1: String?
    , __2: String?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Crypt()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.crypt</code> as a field.
 */
fun crypt(
      __1: String?
    , __2: String?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Crypt()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.crypt</code> as a field.
 */
fun crypt(
      __1: Field<String?>
    , __2: Field<String?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Crypt()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.date_dist</code>
 */
fun dateDist(
      configuration: Configuration
    , __1: LocalDate?
    , __2: LocalDate?
): Int? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.DateDist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.date_dist</code> as a field.
 */
fun dateDist(
      __1: LocalDate?
    , __2: LocalDate?
): Field<Int?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.DateDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.date_dist</code> as a field.
 */
fun dateDist(
      __1: Field<LocalDate?>
    , __2: Field<LocalDate?>
): Field<Int?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.DateDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.dearmor</code>
 */
fun dearmor(
      configuration: Configuration
    , __1: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Dearmor()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.dearmor</code> as a field.
 */
fun dearmor(
      __1: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Dearmor()
    f.set__1(__1)

    return f.asField()
}

/**
 * Get <code>public.dearmor</code> as a field.
 */
fun dearmor(
      __1: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Dearmor()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.decrypt</code>
 */
fun decrypt(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Decrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.decrypt</code> as a field.
 */
fun decrypt(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Decrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.decrypt</code> as a field.
 */
fun decrypt(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Decrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.decrypt_iv</code>
 */
fun decryptIv(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: ByteArray?
    , __4: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.DecryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.decrypt_iv</code> as a field.
 */
fun decryptIv(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: ByteArray?
    , __4: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.DecryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Get <code>public.decrypt_iv</code> as a field.
 */
fun decryptIv(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<ByteArray?>
    , __4: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.DecryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Call <code>public.digest</code>
 */
fun digest1(
      configuration: Configuration
    , __1: String?
    , __2: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Digest1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.digest</code> as a field.
 */
fun digest1(
      __1: String?
    , __2: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Digest1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.digest</code> as a field.
 */
fun digest1(
      __1: Field<String?>
    , __2: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Digest1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.digest</code>
 */
fun digest2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Digest2()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.digest</code> as a field.
 */
fun digest2(
      __1: ByteArray?
    , __2: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Digest2()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.digest</code> as a field.
 */
fun digest2(
      __1: Field<ByteArray?>
    , __2: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Digest2()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.encrypt</code>
 */
fun encrypt(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Encrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.encrypt</code> as a field.
 */
fun encrypt(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Encrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.encrypt</code> as a field.
 */
fun encrypt(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Encrypt()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.encrypt_iv</code>
 */
fun encryptIv(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: ByteArray?
    , __4: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.EncryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.encrypt_iv</code> as a field.
 */
fun encryptIv(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: ByteArray?
    , __4: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.EncryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Get <code>public.encrypt_iv</code> as a field.
 */
fun encryptIv(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<ByteArray?>
    , __4: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.EncryptIv()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Call <code>public.float4_dist</code>
 */
fun float4Dist(
      configuration: Configuration
    , __1: Float?
    , __2: Float?
): Float? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Float4Dist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.float4_dist</code> as a field.
 */
fun float4Dist(
      __1: Float?
    , __2: Float?
): Field<Float?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Float4Dist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.float4_dist</code> as a field.
 */
fun float4Dist(
      __1: Field<Float?>
    , __2: Field<Float?>
): Field<Float?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Float4Dist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.float8_dist</code>
 */
fun float8Dist(
      configuration: Configuration
    , __1: Double?
    , __2: Double?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Float8Dist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.float8_dist</code> as a field.
 */
fun float8Dist(
      __1: Double?
    , __2: Double?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Float8Dist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.float8_dist</code> as a field.
 */
fun float8Dist(
      __1: Field<Double?>
    , __2: Field<Double?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Float8Dist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: String?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitConsistent(
      __1: Any?
    , __2: String?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitConsistent(
      __1: Field<Any?>
    , __2: Field<String?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBitUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBitUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBpcharCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBpcharCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBpcharCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBpcharCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBpcharCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBpcharCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBpcharConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: String?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBpcharConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBpcharConsistent(
      __1: Any?
    , __2: String?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBpcharConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtBpcharConsistent(
      __1: Field<Any?>
    , __2: Field<String?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtBpcharConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: ByteArray?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaConsistent(
      __1: Any?
    , __2: ByteArray?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaConsistent(
      __1: Field<Any?>
    , __2: Field<ByteArray?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtByteaUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtByteaUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashConsistent(
      __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashConsistent(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashDistance(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashDistance(
      __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashDistance(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashFetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashFetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashFetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashFetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtCashUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtCashUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: LocalDate?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateConsistent(
      __1: Any?
    , __2: LocalDate?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateConsistent(
      __1: Field<Any?>
    , __2: Field<LocalDate?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateDistance(
      configuration: Configuration
    , __1: Any?
    , __2: LocalDate?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateDistance(
      __1: Any?
    , __2: LocalDate?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateDistance(
      __1: Field<Any?>
    , __2: Field<LocalDate?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateFetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateFetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateFetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateFetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDatePenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDatePenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDatePenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDatePenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDatePenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDatePenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDatePicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDatePicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDatePicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDatePicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDatePicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDatePicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDateUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDateUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDecompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDecompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDecompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDecompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtDecompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtDecompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumConsistent(
      __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumConsistent(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumFetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumFetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumFetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumFetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtEnumUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtEnumUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Compress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Compress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Compress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Compress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Consistent(
      configuration: Configuration
    , __1: Any?
    , __2: Float?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Consistent(
      __1: Any?
    , __2: Float?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Consistent(
      __1: Field<Any?>
    , __2: Field<Float?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Distance(
      configuration: Configuration
    , __1: Any?
    , __2: Float?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Distance(
      __1: Any?
    , __2: Float?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Distance(
      __1: Field<Any?>
    , __2: Field<Float?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Fetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Fetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Fetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Fetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Penalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Penalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Penalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Picksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Picksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Picksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Same(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Same(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Same(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Union(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Union()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Union(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat4Union(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat4Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Compress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Compress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Compress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Compress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Consistent(
      configuration: Configuration
    , __1: Any?
    , __2: Double?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Consistent(
      __1: Any?
    , __2: Double?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Consistent(
      __1: Field<Any?>
    , __2: Field<Double?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Distance(
      configuration: Configuration
    , __1: Any?
    , __2: Double?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Distance(
      __1: Any?
    , __2: Double?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Distance(
      __1: Field<Any?>
    , __2: Field<Double?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Fetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Fetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Fetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Fetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Penalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Penalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Penalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Picksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Picksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Picksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Same(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Same(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Same(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Union(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Union()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Union(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtFloat8Union(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtFloat8Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetConsistent(
      __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetConsistent(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInetUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInetUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Compress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Compress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Compress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Compress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Consistent(
      configuration: Configuration
    , __1: Any?
    , __2: Short?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Consistent(
      __1: Any?
    , __2: Short?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Consistent(
      __1: Field<Any?>
    , __2: Field<Short?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Distance(
      configuration: Configuration
    , __1: Any?
    , __2: Short?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Distance(
      __1: Any?
    , __2: Short?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Distance(
      __1: Field<Any?>
    , __2: Field<Short?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Fetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Fetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Fetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Fetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Penalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Penalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Penalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Picksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Picksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Picksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Same(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Same(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Same(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Union(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Union()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Union(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt2Union(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt2Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Compress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Compress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Compress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Compress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Consistent(
      configuration: Configuration
    , __1: Any?
    , __2: Int?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Consistent(
      __1: Any?
    , __2: Int?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Consistent(
      __1: Field<Any?>
    , __2: Field<Int?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Distance(
      configuration: Configuration
    , __1: Any?
    , __2: Int?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Distance(
      __1: Any?
    , __2: Int?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Distance(
      __1: Field<Any?>
    , __2: Field<Int?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Fetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Fetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Fetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Fetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Penalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Penalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Penalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Picksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Picksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Picksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Same(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Same(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Same(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Union(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Union()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Union(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt4Union(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt4Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Compress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Compress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Compress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Compress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Consistent(
      configuration: Configuration
    , __1: Any?
    , __2: Long?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Consistent(
      __1: Any?
    , __2: Long?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Consistent(
      __1: Field<Any?>
    , __2: Field<Long?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Distance(
      configuration: Configuration
    , __1: Any?
    , __2: Long?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Distance(
      __1: Any?
    , __2: Long?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Distance(
      __1: Field<Any?>
    , __2: Field<Long?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Distance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Fetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Fetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Fetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Fetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Penalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Penalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Penalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Picksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Picksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Picksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Same(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Same(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Same(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Union(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Union()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Union(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtInt8Union(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtInt8Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: YearToSecond?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvConsistent(
      __1: Any?
    , __2: YearToSecond?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvConsistent(
      __1: Field<Any?>
    , __2: Field<YearToSecond?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvDecompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvDecompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvDecompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvDecompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvDecompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvDecompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvDistance(
      configuration: Configuration
    , __1: Any?
    , __2: YearToSecond?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvDistance(
      __1: Any?
    , __2: YearToSecond?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvDistance(
      __1: Field<Any?>
    , __2: Field<YearToSecond?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvFetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvFetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvFetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvFetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtIntvUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtIntvUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Compress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Compress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Compress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Compress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Compress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Consistent(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Consistent(
      __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Consistent(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Consistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Fetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Fetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Fetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Fetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Fetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Penalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Penalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Penalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Penalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Picksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Picksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Picksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Picksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Same(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Same(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Same(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Same()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Union(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Union()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Union(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacad8Union(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacad8Union()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadConsistent(
      __1: Any?
    , __2: Any?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadConsistent(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadFetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadFetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadFetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadFetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtMacadUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtMacadUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: BigDecimal?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericConsistent(
      __1: Any?
    , __2: BigDecimal?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericConsistent(
      __1: Field<Any?>
    , __2: Field<BigDecimal?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtNumericUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtNumericUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: Long?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidConsistent(
      __1: Any?
    , __2: Long?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidConsistent(
      __1: Field<Any?>
    , __2: Field<Long?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidDistance(
      configuration: Configuration
    , __1: Any?
    , __2: Long?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidDistance(
      __1: Any?
    , __2: Long?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidDistance(
      __1: Field<Any?>
    , __2: Field<Long?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidFetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidFetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidFetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidFetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtOidUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtOidUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: String?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextConsistent(
      __1: Any?
    , __2: String?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextConsistent(
      __1: Field<Any?>
    , __2: Field<String?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTextUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTextUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: LocalTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeConsistent(
      __1: Any?
    , __2: LocalTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeConsistent(
      __1: Field<Any?>
    , __2: Field<LocalTime?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeDistance(
      configuration: Configuration
    , __1: Any?
    , __2: LocalTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeDistance(
      __1: Any?
    , __2: LocalTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeDistance(
      __1: Field<Any?>
    , __2: Field<LocalTime?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeFetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeFetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeFetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeFetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimePenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimePenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimePenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimePenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimePenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimePenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimePicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimePicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimePicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimePicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimePicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimePicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimeUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimeUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimetzCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimetzCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimetzCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimetzCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimetzCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimetzCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimetzConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: OffsetTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimetzConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimetzConsistent(
      __1: Any?
    , __2: OffsetTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimetzConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTimetzConsistent(
      __1: Field<Any?>
    , __2: Field<OffsetTime?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTimetzConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: LocalDateTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsConsistent(
      __1: Any?
    , __2: LocalDateTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsConsistent(
      __1: Field<Any?>
    , __2: Field<LocalDateTime?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsDistance(
      configuration: Configuration
    , __1: Any?
    , __2: LocalDateTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsDistance(
      __1: Any?
    , __2: LocalDateTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsDistance(
      __1: Field<Any?>
    , __2: Field<LocalDateTime?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsFetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsFetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsFetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsFetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTsUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTsUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTstzCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTstzCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTstzCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTstzCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTstzCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTstzCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTstzConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: OffsetDateTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTstzConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTstzConsistent(
      __1: Any?
    , __2: OffsetDateTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTstzConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTstzConsistent(
      __1: Field<Any?>
    , __2: Field<OffsetDateTime?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTstzConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTstzDistance(
      configuration: Configuration
    , __1: Any?
    , __2: OffsetDateTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Double? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTstzDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTstzDistance(
      __1: Any?
    , __2: OffsetDateTime?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTstzDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtTstzDistance(
      __1: Field<Any?>
    , __2: Field<OffsetDateTime?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Double?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtTstzDistance()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidCompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidCompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidCompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidCompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidCompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidConsistent(
      configuration: Configuration
    , __1: Any?
    , __2: UUID?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Boolean? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidConsistent(
      __1: Any?
    , __2: UUID?
    , __3: Short?
    , __4: Long?
    , __5: Any?
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. Parameter type or return type is unknown. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidConsistent(
      __1: Field<Any?>
    , __2: Field<UUID?>
    , __3: Field<Short?>
    , __4: Field<Long?>
    , __5: Field<Any?>
): Field<Boolean?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidConsistent()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)
    f.set__5(__5)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidFetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidFetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidFetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidFetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidPenalty(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidPenalty(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidPenalty(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidPenalty()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidPicksplit(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidPicksplit(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidPicksplit(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidPicksplit()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidSame(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
    , __3: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidSame(
      __1: Any?
    , __2: Any?
    , __3: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidSame(
      __1: Field<Any?>
    , __2: Field<Any?>
    , __3: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidSame()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidUnion(
      configuration: Configuration
    , __1: Any?
    , __2: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidUnion()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidUnion(
      __1: Any?
    , __2: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtUuidUnion(
      __1: Field<Any?>
    , __2: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtUuidUnion()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtVarDecompress(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtVarDecompress()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtVarDecompress(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtVarDecompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtVarDecompress(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtVarDecompress()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtVarFetch(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtVarFetch()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtVarFetch(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtVarFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtVarFetch(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtVarFetch()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey16In(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey16In()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey16In(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey16In()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey16In(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey16In()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey16Out(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey16Out()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey16Out(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey16Out()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey16Out(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey16Out()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey32In(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey32In()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey32In(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey32In()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey32In(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey32In()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey32Out(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey32Out()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey32Out(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey32Out()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey32Out(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey32Out()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey4In(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey4In()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey4In(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey4In()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey4In(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey4In()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey4Out(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey4Out()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey4Out(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey4Out()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey4Out(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey4Out()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey8In(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey8In()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey8In(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey8In()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey8In(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey8In()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey8Out(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey8Out()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey8Out(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey8Out()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekey8Out(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Gbtreekey8Out()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekeyVarIn(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtreekeyVarIn()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekeyVarIn(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtreekeyVarIn()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekeyVarIn(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtreekeyVarIn()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekeyVarOut(
      configuration: Configuration
    , __1: Any?
): Any? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtreekeyVarOut()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekeyVarOut(
      __1: Any?
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtreekeyVarOut()
    f.set__1(__1)

    return f.asField()
}
@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
fun gbtreekeyVarOut(
      __1: Field<Any?>
): Field<Any?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GbtreekeyVarOut()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.gen_random_bytes</code>
 */
fun genRandomBytes(
      configuration: Configuration
    , __1: Int?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenRandomBytes()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.gen_random_bytes</code> as a field.
 */
fun genRandomBytes(
      __1: Int?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenRandomBytes()
    f.set__1(__1)

    return f.asField()
}

/**
 * Get <code>public.gen_random_bytes</code> as a field.
 */
fun genRandomBytes(
      __1: Field<Int?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenRandomBytes()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.gen_random_uuid</code>
 */
fun genRandomUuid(
      configuration: Configuration
): UUID? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenRandomUuid()

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.gen_random_uuid</code> as a field.
 */
fun genRandomUuid(): Field<UUID?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenRandomUuid()

    return f.asField()
}

/**
 * Call <code>public.gen_salt</code>
 */
fun genSalt1(
      configuration: Configuration
    , __1: String?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenSalt1()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.gen_salt</code> as a field.
 */
fun genSalt1(
      __1: String?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenSalt1()
    f.set__1(__1)

    return f.asField()
}

/**
 * Get <code>public.gen_salt</code> as a field.
 */
fun genSalt1(
      __1: Field<String?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenSalt1()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.gen_salt</code>
 */
fun genSalt2(
      configuration: Configuration
    , __1: String?
    , __2: Int?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenSalt2()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.gen_salt</code> as a field.
 */
fun genSalt2(
      __1: String?
    , __2: Int?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenSalt2()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.gen_salt</code> as a field.
 */
fun genSalt2(
      __1: Field<String?>
    , __2: Field<Int?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.GenSalt2()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.hmac</code>
 */
fun hmac1(
      configuration: Configuration
    , __1: String?
    , __2: String?
    , __3: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Hmac1()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.hmac</code> as a field.
 */
fun hmac1(
      __1: String?
    , __2: String?
    , __3: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Hmac1()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.hmac</code> as a field.
 */
fun hmac1(
      __1: Field<String?>
    , __2: Field<String?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Hmac1()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.hmac</code>
 */
fun hmac2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Hmac2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.hmac</code> as a field.
 */
fun hmac2(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Hmac2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.hmac</code> as a field.
 */
fun hmac2(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Hmac2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.int2_dist</code>
 */
fun int2Dist(
      configuration: Configuration
    , __1: Short?
    , __2: Short?
): Short? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Int2Dist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.int2_dist</code> as a field.
 */
fun int2Dist(
      __1: Short?
    , __2: Short?
): Field<Short?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Int2Dist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.int2_dist</code> as a field.
 */
fun int2Dist(
      __1: Field<Short?>
    , __2: Field<Short?>
): Field<Short?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Int2Dist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.int4_dist</code>
 */
fun int4Dist(
      configuration: Configuration
    , __1: Int?
    , __2: Int?
): Int? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Int4Dist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.int4_dist</code> as a field.
 */
fun int4Dist(
      __1: Int?
    , __2: Int?
): Field<Int?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Int4Dist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.int4_dist</code> as a field.
 */
fun int4Dist(
      __1: Field<Int?>
    , __2: Field<Int?>
): Field<Int?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Int4Dist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.int8_dist</code>
 */
fun int8Dist(
      configuration: Configuration
    , __1: Long?
    , __2: Long?
): Long? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Int8Dist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.int8_dist</code> as a field.
 */
fun int8Dist(
      __1: Long?
    , __2: Long?
): Field<Long?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Int8Dist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.int8_dist</code> as a field.
 */
fun int8Dist(
      __1: Field<Long?>
    , __2: Field<Long?>
): Field<Long?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.Int8Dist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.interval_dist</code>
 */
fun intervalDist(
      configuration: Configuration
    , __1: YearToSecond?
    , __2: YearToSecond?
): YearToSecond? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.IntervalDist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.interval_dist</code> as a field.
 */
fun intervalDist(
      __1: YearToSecond?
    , __2: YearToSecond?
): Field<YearToSecond?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.IntervalDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.interval_dist</code> as a field.
 */
fun intervalDist(
      __1: Field<YearToSecond?>
    , __2: Field<YearToSecond?>
): Field<YearToSecond?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.IntervalDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.oid_dist</code>
 */
fun oidDist(
      configuration: Configuration
    , __1: Long?
    , __2: Long?
): Long? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.OidDist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.oid_dist</code> as a field.
 */
fun oidDist(
      __1: Long?
    , __2: Long?
): Field<Long?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.OidDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.oid_dist</code> as a field.
 */
fun oidDist(
      __1: Field<Long?>
    , __2: Field<Long?>
): Field<Long?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.OidDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_key_id</code>
 */
fun pgpKeyId(
      configuration: Configuration
    , __1: ByteArray?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpKeyId()
    f.set__1(__1)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_key_id</code> as a field.
 */
fun pgpKeyId(
      __1: ByteArray?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpKeyId()
    f.set__1(__1)

    return f.asField()
}

/**
 * Get <code>public.pgp_key_id</code> as a field.
 */
fun pgpKeyId(
      __1: Field<ByteArray?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpKeyId()
    f.set__1(__1)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt</code>
 */
fun pgpPubDecrypt1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt1(
      __1: ByteArray?
    , __2: ByteArray?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt1(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt</code>
 */
fun pgpPubDecrypt2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt2(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt2(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt</code>
 */
fun pgpPubDecrypt3(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
    , __4: String?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecrypt3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt3(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
    , __4: String?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecrypt3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt</code> as a field.
 */
fun pgpPubDecrypt3(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
    , __4: Field<String?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecrypt3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt_bytea</code>
 */
fun pgpPubDecryptBytea1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea1(
      __1: ByteArray?
    , __2: ByteArray?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea1(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt_bytea</code>
 */
fun pgpPubDecryptBytea2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea2(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea2(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_decrypt_bytea</code>
 */
fun pgpPubDecryptBytea3(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
    , __4: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecryptBytea3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea3(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
    , __4: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecryptBytea3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_decrypt_bytea</code> as a field.
 */
fun pgpPubDecryptBytea3(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
    , __4: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubDecryptBytea3()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)
    f.set__4(__4)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_encrypt</code>
 */
fun pgpPubEncrypt1(
      configuration: Configuration
    , __1: String?
    , __2: ByteArray?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_encrypt</code> as a field.
 */
fun pgpPubEncrypt1(
      __1: String?
    , __2: ByteArray?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_encrypt</code> as a field.
 */
fun pgpPubEncrypt1(
      __1: Field<String?>
    , __2: Field<ByteArray?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_encrypt</code>
 */
fun pgpPubEncrypt2(
      configuration: Configuration
    , __1: String?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_encrypt</code> as a field.
 */
fun pgpPubEncrypt2(
      __1: String?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_encrypt</code> as a field.
 */
fun pgpPubEncrypt2(
      __1: Field<String?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_encrypt_bytea</code>
 */
fun pgpPubEncryptBytea1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
 */
fun pgpPubEncryptBytea1(
      __1: ByteArray?
    , __2: ByteArray?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
 */
fun pgpPubEncryptBytea1(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_pub_encrypt_bytea</code>
 */
fun pgpPubEncryptBytea2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
 */
fun pgpPubEncryptBytea2(
      __1: ByteArray?
    , __2: ByteArray?
    , __3: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_pub_encrypt_bytea</code> as a field.
 */
fun pgpPubEncryptBytea2(
      __1: Field<ByteArray?>
    , __2: Field<ByteArray?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpPubEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_decrypt</code>
 */
fun pgpSymDecrypt1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_decrypt</code> as a field.
 */
fun pgpSymDecrypt1(
      __1: ByteArray?
    , __2: String?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_decrypt</code> as a field.
 */
fun pgpSymDecrypt1(
      __1: Field<ByteArray?>
    , __2: Field<String?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_decrypt</code>
 */
fun pgpSymDecrypt2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
    , __3: String?
): String? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_decrypt</code> as a field.
 */
fun pgpSymDecrypt2(
      __1: ByteArray?
    , __2: String?
    , __3: String?
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_decrypt</code> as a field.
 */
fun pgpSymDecrypt2(
      __1: Field<ByteArray?>
    , __2: Field<String?>
    , __3: Field<String?>
): Field<String?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_decrypt_bytea</code>
 */
fun pgpSymDecryptBytea1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
 */
fun pgpSymDecryptBytea1(
      __1: ByteArray?
    , __2: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
 */
fun pgpSymDecryptBytea1(
      __1: Field<ByteArray?>
    , __2: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_decrypt_bytea</code>
 */
fun pgpSymDecryptBytea2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
    , __3: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
 */
fun pgpSymDecryptBytea2(
      __1: ByteArray?
    , __2: String?
    , __3: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_decrypt_bytea</code> as a field.
 */
fun pgpSymDecryptBytea2(
      __1: Field<ByteArray?>
    , __2: Field<String?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymDecryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_encrypt</code>
 */
fun pgpSymEncrypt1(
      configuration: Configuration
    , __1: String?
    , __2: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_encrypt</code> as a field.
 */
fun pgpSymEncrypt1(
      __1: String?
    , __2: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_encrypt</code> as a field.
 */
fun pgpSymEncrypt1(
      __1: Field<String?>
    , __2: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncrypt1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_encrypt</code>
 */
fun pgpSymEncrypt2(
      configuration: Configuration
    , __1: String?
    , __2: String?
    , __3: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_encrypt</code> as a field.
 */
fun pgpSymEncrypt2(
      __1: String?
    , __2: String?
    , __3: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_encrypt</code> as a field.
 */
fun pgpSymEncrypt2(
      __1: Field<String?>
    , __2: Field<String?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncrypt2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_encrypt_bytea</code>
 */
fun pgpSymEncryptBytea1(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
 */
fun pgpSymEncryptBytea1(
      __1: ByteArray?
    , __2: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
 */
fun pgpSymEncryptBytea1(
      __1: Field<ByteArray?>
    , __2: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncryptBytea1()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_sym_encrypt_bytea</code>
 */
fun pgpSymEncryptBytea2(
      configuration: Configuration
    , __1: ByteArray?
    , __2: String?
    , __3: String?
): ByteArray? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
 */
fun pgpSymEncryptBytea2(
      __1: ByteArray?
    , __2: String?
    , __3: String?
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Get <code>public.pgp_sym_encrypt_bytea</code> as a field.
 */
fun pgpSymEncryptBytea2(
      __1: Field<ByteArray?>
    , __2: Field<String?>
    , __3: Field<String?>
): Field<ByteArray?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.PgpSymEncryptBytea2()
    f.set__1(__1)
    f.set__2(__2)
    f.set__3(__3)

    return f.asField()
}

/**
 * Call <code>public.time_dist</code>
 */
fun timeDist(
      configuration: Configuration
    , __1: LocalTime?
    , __2: LocalTime?
): YearToSecond? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.TimeDist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.time_dist</code> as a field.
 */
fun timeDist(
      __1: LocalTime?
    , __2: LocalTime?
): Field<YearToSecond?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.TimeDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.time_dist</code> as a field.
 */
fun timeDist(
      __1: Field<LocalTime?>
    , __2: Field<LocalTime?>
): Field<YearToSecond?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.TimeDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.ts_dist</code>
 */
fun tsDist(
      configuration: Configuration
    , __1: LocalDateTime?
    , __2: LocalDateTime?
): YearToSecond? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.TsDist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.ts_dist</code> as a field.
 */
fun tsDist(
      __1: LocalDateTime?
    , __2: LocalDateTime?
): Field<YearToSecond?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.TsDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.ts_dist</code> as a field.
 */
fun tsDist(
      __1: Field<LocalDateTime?>
    , __2: Field<LocalDateTime?>
): Field<YearToSecond?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.TsDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.tstz_dist</code>
 */
fun tstzDist(
      configuration: Configuration
    , __1: OffsetDateTime?
    , __2: OffsetDateTime?
): YearToSecond? {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.TstzDist()
    f.set__1(__1)
    f.set__2(__2)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.tstz_dist</code> as a field.
 */
fun tstzDist(
      __1: OffsetDateTime?
    , __2: OffsetDateTime?
): Field<YearToSecond?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.TstzDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Get <code>public.tstz_dist</code> as a field.
 */
fun tstzDist(
      __1: Field<OffsetDateTime?>
    , __2: Field<OffsetDateTime?>
): Field<YearToSecond?> {
    val f = fi.hsl.jore.jore4.jooq.`public`.routines.TstzDist()
    f.set__1(__1)
    f.set__2(__2)

    return f.asField()
}

/**
 * Call <code>public.pgp_armor_headers</code>.
 */
fun pgpArmorHeaders(
      configuration: Configuration
    , __1: String?
): Result<Record> = configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.`public`.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
      __1
)).fetch()

/**
 * Get <code>public.pgp_armor_headers</code> as a table.
 */
fun pgpArmorHeaders(
      __1: String?
): fi.hsl.jore.jore4.jooq.`public`.tables.PgpArmorHeaders = fi.hsl.jore.jore4.jooq.`public`.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
    __1
)

/**
 * Get <code>public.pgp_armor_headers</code> as a table.
 */
fun pgpArmorHeaders(
      __1: Field<String?>
): fi.hsl.jore.jore4.jooq.`public`.tables.PgpArmorHeaders = fi.hsl.jore.jore4.jooq.`public`.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
    __1
)
