/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.journey_pattern.tables.records


import fi.hsl.jore.jore4.jooq.journey_pattern.tables.JourneyPatternRef

import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


/**
 * Reference to a given snapshot of a JOURNEY PATTERN for a given operating day.
 * Transmodel: https://www.transmodel-cen.eu/model/index.htm?goto=2:3:4:729 
 */
@Suppress("UNCHECKED_CAST")
open class JourneyPatternRefRecord() : UpdatableRecordImpl<JourneyPatternRefRecord>(JourneyPatternRef.JOURNEY_PATTERN_REF), Record5<UUID?, UUID?, OffsetDateTime?, OffsetDateTime?, String?> {

    open var journeyPatternRefId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var journeyPatternId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var observationTimestamp: OffsetDateTime?
        set(value): Unit = set(2, value)
        get(): OffsetDateTime? = get(2) as OffsetDateTime?

    open var snapshotTimestamp: OffsetDateTime?
        set(value): Unit = set(3, value)
        get(): OffsetDateTime? = get(3) as OffsetDateTime?

    open var typeOfLine: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<UUID?, UUID?, OffsetDateTime?, OffsetDateTime?, String?> = super.fieldsRow() as Row5<UUID?, UUID?, OffsetDateTime?, OffsetDateTime?, String?>
    override fun valuesRow(): Row5<UUID?, UUID?, OffsetDateTime?, OffsetDateTime?, String?> = super.valuesRow() as Row5<UUID?, UUID?, OffsetDateTime?, OffsetDateTime?, String?>
    override fun field1(): Field<UUID?> = JourneyPatternRef.JOURNEY_PATTERN_REF.JOURNEY_PATTERN_REF_ID
    override fun field2(): Field<UUID?> = JourneyPatternRef.JOURNEY_PATTERN_REF.JOURNEY_PATTERN_ID
    override fun field3(): Field<OffsetDateTime?> = JourneyPatternRef.JOURNEY_PATTERN_REF.OBSERVATION_TIMESTAMP
    override fun field4(): Field<OffsetDateTime?> = JourneyPatternRef.JOURNEY_PATTERN_REF.SNAPSHOT_TIMESTAMP
    override fun field5(): Field<String?> = JourneyPatternRef.JOURNEY_PATTERN_REF.TYPE_OF_LINE
    override fun component1(): UUID? = journeyPatternRefId
    override fun component2(): UUID? = journeyPatternId
    override fun component3(): OffsetDateTime? = observationTimestamp
    override fun component4(): OffsetDateTime? = snapshotTimestamp
    override fun component5(): String? = typeOfLine
    override fun value1(): UUID? = journeyPatternRefId
    override fun value2(): UUID? = journeyPatternId
    override fun value3(): OffsetDateTime? = observationTimestamp
    override fun value4(): OffsetDateTime? = snapshotTimestamp
    override fun value5(): String? = typeOfLine

    override fun value1(value: UUID?): JourneyPatternRefRecord {
        set(0, value)
        return this
    }

    override fun value2(value: UUID?): JourneyPatternRefRecord {
        set(1, value)
        return this
    }

    override fun value3(value: OffsetDateTime?): JourneyPatternRefRecord {
        set(2, value)
        return this
    }

    override fun value4(value: OffsetDateTime?): JourneyPatternRefRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): JourneyPatternRefRecord {
        set(4, value)
        return this
    }

    override fun values(value1: UUID?, value2: UUID?, value3: OffsetDateTime?, value4: OffsetDateTime?, value5: String?): JourneyPatternRefRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised JourneyPatternRefRecord
     */
    constructor(journeyPatternRefId: UUID? = null, journeyPatternId: UUID? = null, observationTimestamp: OffsetDateTime? = null, snapshotTimestamp: OffsetDateTime? = null, typeOfLine: String? = null): this() {
        this.journeyPatternRefId = journeyPatternRefId
        this.journeyPatternId = journeyPatternId
        this.observationTimestamp = observationTimestamp
        this.snapshotTimestamp = snapshotTimestamp
        this.typeOfLine = typeOfLine
        resetChangedOnNotNull()
    }
}
