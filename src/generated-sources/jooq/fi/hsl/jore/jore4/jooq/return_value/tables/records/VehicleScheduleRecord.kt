/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.return_value.tables.records


import fi.hsl.jore.jore4.jooq.return_value.tables.VehicleSchedule

import java.time.LocalDate
import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.impl.TableRecordImpl


/**
 * This return value table is used in function
 * vehicle_journey.get_vehicle_schedules_on_date. It consists of
 * vehicle_journey_id, vehicle_schedule_frame_id or
 * substitute_operating_day_by_line_type_id and also enriched with data, which
 * are used in the UI side.
 */
@Suppress("UNCHECKED_CAST")
open class VehicleScheduleRecord private constructor() : TableRecordImpl<VehicleScheduleRecord>(VehicleSchedule.VEHICLE_SCHEDULE) {

    open var vehicleJourneyId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var validityStart: LocalDate
        set(value): Unit = set(1, value)
        get(): LocalDate = get(1) as LocalDate

    open var validityEnd: LocalDate
        set(value): Unit = set(2, value)
        get(): LocalDate = get(2) as LocalDate

    open var priority: Int
        set(value): Unit = set(3, value)
        get(): Int = get(3) as Int

    open var dayTypeId: UUID
        set(value): Unit = set(4, value)
        get(): UUID = get(4) as UUID

    open var vehicleScheduleFrameId: UUID?
        set(value): Unit = set(5, value)
        get(): UUID? = get(5) as UUID?

    open var substituteOperatingDayByLineTypeId: UUID?
        set(value): Unit = set(6, value)
        get(): UUID? = get(6) as UUID?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(7, value)
        get(): OffsetDateTime? = get(7) as OffsetDateTime?

    /**
     * Create a detached, initialised VehicleScheduleRecord
     */
    constructor(vehicleJourneyId: UUID? = null, validityStart: LocalDate, validityEnd: LocalDate, priority: Int, dayTypeId: UUID, vehicleScheduleFrameId: UUID? = null, substituteOperatingDayByLineTypeId: UUID? = null, createdAt: OffsetDateTime? = null): this() {
        this.vehicleJourneyId = vehicleJourneyId
        this.validityStart = validityStart
        this.validityEnd = validityEnd
        this.priority = priority
        this.dayTypeId = dayTypeId
        this.vehicleScheduleFrameId = vehicleScheduleFrameId
        this.substituteOperatingDayByLineTypeId = substituteOperatingDayByLineTypeId
        this.createdAt = createdAt
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised VehicleScheduleRecord
     */
    constructor(value: fi.hsl.jore.jore4.jooq.return_value.tables.pojos.VehicleSchedule?): this() {
        if (value != null) {
            this.vehicleJourneyId = value.vehicleJourneyId
            this.validityStart = value.validityStart
            this.validityEnd = value.validityEnd
            this.priority = value.priority
            this.dayTypeId = value.dayTypeId
            this.vehicleScheduleFrameId = value.vehicleScheduleFrameId
            this.substituteOperatingDayByLineTypeId = value.substituteOperatingDayByLineTypeId
            this.createdAt = value.createdAt
            resetChangedOnNotNull()
        }
    }
}
