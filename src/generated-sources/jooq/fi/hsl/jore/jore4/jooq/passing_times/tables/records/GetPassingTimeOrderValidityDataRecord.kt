/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.passing_times.tables.records


import fi.hsl.jore.jore4.jooq.passing_times.tables.GetPassingTimeOrderValidityData

import java.util.UUID

import org.jooq.Field
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GetPassingTimeOrderValidityDataRecord() : TableRecordImpl<GetPassingTimeOrderValidityDataRecord>(GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA), Record5<UUID?, UUID?, UUID?, Boolean?, Boolean?> {

    open var vehicleJourneyId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var firstPassingTimeId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var lastPassingTimeId: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    open var stopOrderIsValid: Boolean?
        set(value): Unit = set(3, value)
        get(): Boolean? = get(3) as Boolean?

    open var coherentJourneyPatternRefs: Boolean?
        set(value): Unit = set(4, value)
        get(): Boolean? = get(4) as Boolean?

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<UUID?, UUID?, UUID?, Boolean?, Boolean?> = super.fieldsRow() as Row5<UUID?, UUID?, UUID?, Boolean?, Boolean?>
    override fun valuesRow(): Row5<UUID?, UUID?, UUID?, Boolean?, Boolean?> = super.valuesRow() as Row5<UUID?, UUID?, UUID?, Boolean?, Boolean?>
    override fun field1(): Field<UUID?> = GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA.VEHICLE_JOURNEY_ID
    override fun field2(): Field<UUID?> = GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA.FIRST_PASSING_TIME_ID
    override fun field3(): Field<UUID?> = GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA.LAST_PASSING_TIME_ID
    override fun field4(): Field<Boolean?> = GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA.STOP_ORDER_IS_VALID
    override fun field5(): Field<Boolean?> = GetPassingTimeOrderValidityData.GET_PASSING_TIME_ORDER_VALIDITY_DATA.COHERENT_JOURNEY_PATTERN_REFS
    override fun component1(): UUID? = vehicleJourneyId
    override fun component2(): UUID? = firstPassingTimeId
    override fun component3(): UUID? = lastPassingTimeId
    override fun component4(): Boolean? = stopOrderIsValid
    override fun component5(): Boolean? = coherentJourneyPatternRefs
    override fun value1(): UUID? = vehicleJourneyId
    override fun value2(): UUID? = firstPassingTimeId
    override fun value3(): UUID? = lastPassingTimeId
    override fun value4(): Boolean? = stopOrderIsValid
    override fun value5(): Boolean? = coherentJourneyPatternRefs

    override fun value1(value: UUID?): GetPassingTimeOrderValidityDataRecord {
        set(0, value)
        return this
    }

    override fun value2(value: UUID?): GetPassingTimeOrderValidityDataRecord {
        set(1, value)
        return this
    }

    override fun value3(value: UUID?): GetPassingTimeOrderValidityDataRecord {
        set(2, value)
        return this
    }

    override fun value4(value: Boolean?): GetPassingTimeOrderValidityDataRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Boolean?): GetPassingTimeOrderValidityDataRecord {
        set(4, value)
        return this
    }

    override fun values(value1: UUID?, value2: UUID?, value3: UUID?, value4: Boolean?, value5: Boolean?): GetPassingTimeOrderValidityDataRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised GetPassingTimeOrderValidityDataRecord
     */
    constructor(vehicleJourneyId: UUID? = null, firstPassingTimeId: UUID? = null, lastPassingTimeId: UUID? = null, stopOrderIsValid: Boolean? = null, coherentJourneyPatternRefs: Boolean? = null): this() {
        this.vehicleJourneyId = vehicleJourneyId
        this.firstPassingTimeId = firstPassingTimeId
        this.lastPassingTimeId = lastPassingTimeId
        this.stopOrderIsValid = stopOrderIsValid
        this.coherentJourneyPatternRefs = coherentJourneyPatternRefs
        resetChangedOnNotNull()
    }
}
