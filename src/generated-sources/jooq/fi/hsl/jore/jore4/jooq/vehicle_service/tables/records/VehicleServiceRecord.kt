/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.vehicle_service.tables.records


import fi.hsl.jore.jore4.jooq.vehicle_service.tables.VehicleService

import java.util.UUID

import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * A work plan for a single vehicle for a whole day, planned for a specific DAY
 * TYPE. A VEHICLE SERVICE includes one or several BLOCKs. If there is no
 * service on a given day, it does not include any BLOCKs. Transmodel:
 * https://www.transmodel-cen.eu/model/index.htm?goto=3:5:965 
 */
@Suppress("UNCHECKED_CAST")
open class VehicleServiceRecord private constructor() : UpdatableRecordImpl<VehicleServiceRecord>(VehicleService.VEHICLE_SERVICE_) {

    open var vehicleServiceId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var dayTypeId: UUID
        set(value): Unit = set(1, value)
        get(): UUID = get(1) as UUID

    open var vehicleScheduleFrameId: UUID
        set(value): Unit = set(2, value)
        get(): UUID = get(2) as UUID

    open var nameI18n: JSONB?
        set(value): Unit = set(3, value)
        get(): JSONB? = get(3) as JSONB?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised VehicleServiceRecord
     */
    constructor(vehicleServiceId: UUID? = null, dayTypeId: UUID, vehicleScheduleFrameId: UUID, nameI18n: JSONB? = null): this() {
        this.vehicleServiceId = vehicleServiceId
        this.dayTypeId = dayTypeId
        this.vehicleScheduleFrameId = vehicleScheduleFrameId
        this.nameI18n = nameI18n
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised VehicleServiceRecord
     */
    constructor(value: fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService?): this() {
        if (value != null) {
            this.vehicleServiceId = value.vehicleServiceId
            this.dayTypeId = value.dayTypeId
            this.vehicleScheduleFrameId = value.vehicleScheduleFrameId
            this.nameI18n = value.nameI18n
            resetChangedOnNotNull()
        }
    }
}
