/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.vehicle_service.tables.records


import fi.hsl.jore.jore4.jooq.vehicle_service.tables.GetVehicleServiceTimingData

import java.util.UUID

import org.jooq.impl.TableRecordImpl
import org.jooq.types.YearToSecond


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GetVehicleServiceTimingDataRecord private constructor() : TableRecordImpl<GetVehicleServiceTimingDataRecord>(GetVehicleServiceTimingData.GET_VEHICLE_SERVICE_TIMING_DATA) {

    open var vehicleServiceId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var serviceStart: YearToSecond?
        set(value): Unit = set(1, value)
        get(): YearToSecond? = get(1) as YearToSecond?

    open var serviceEnd: YearToSecond?
        set(value): Unit = set(2, value)
        get(): YearToSecond? = get(2) as YearToSecond?

    open var blockId: UUID?
        set(value): Unit = set(3, value)
        get(): UUID? = get(3) as UUID?

    open var blockStart: YearToSecond?
        set(value): Unit = set(4, value)
        get(): YearToSecond? = get(4) as YearToSecond?

    open var blockEnd: YearToSecond?
        set(value): Unit = set(5, value)
        get(): YearToSecond? = get(5) as YearToSecond?

    open var preparingTime: YearToSecond?
        set(value): Unit = set(6, value)
        get(): YearToSecond? = get(6) as YearToSecond?

    open var finishingTime: YearToSecond?
        set(value): Unit = set(7, value)
        get(): YearToSecond? = get(7) as YearToSecond?

    open var vehicleJourneyId: UUID?
        set(value): Unit = set(8, value)
        get(): UUID? = get(8) as UUID?

    open var journeyStart: YearToSecond?
        set(value): Unit = set(9, value)
        get(): YearToSecond? = get(9) as YearToSecond?

    open var journeyEnd: YearToSecond?
        set(value): Unit = set(10, value)
        get(): YearToSecond? = get(10) as YearToSecond?

    open var journeyFirstStopDeparture: YearToSecond?
        set(value): Unit = set(11, value)
        get(): YearToSecond? = get(11) as YearToSecond?

    open var journeyLastStopArrival: YearToSecond?
        set(value): Unit = set(12, value)
        get(): YearToSecond? = get(12) as YearToSecond?

    open var turnaroundTime: YearToSecond?
        set(value): Unit = set(13, value)
        get(): YearToSecond? = get(13) as YearToSecond?

    open var layoverTime: YearToSecond?
        set(value): Unit = set(14, value)
        get(): YearToSecond? = get(14) as YearToSecond?

    open var timetabledPassingTimeId: UUID?
        set(value): Unit = set(15, value)
        get(): UUID? = get(15) as UUID?

    open var stopDepartureTime: YearToSecond?
        set(value): Unit = set(16, value)
        get(): YearToSecond? = get(16) as YearToSecond?

    open var stopArrivalTime: YearToSecond?
        set(value): Unit = set(17, value)
        get(): YearToSecond? = get(17) as YearToSecond?

    /**
     * Create a detached, initialised GetVehicleServiceTimingDataRecord
     */
    constructor(vehicleServiceId: UUID? = null, serviceStart: YearToSecond? = null, serviceEnd: YearToSecond? = null, blockId: UUID? = null, blockStart: YearToSecond? = null, blockEnd: YearToSecond? = null, preparingTime: YearToSecond? = null, finishingTime: YearToSecond? = null, vehicleJourneyId: UUID? = null, journeyStart: YearToSecond? = null, journeyEnd: YearToSecond? = null, journeyFirstStopDeparture: YearToSecond? = null, journeyLastStopArrival: YearToSecond? = null, turnaroundTime: YearToSecond? = null, layoverTime: YearToSecond? = null, timetabledPassingTimeId: UUID? = null, stopDepartureTime: YearToSecond? = null, stopArrivalTime: YearToSecond? = null): this() {
        this.vehicleServiceId = vehicleServiceId
        this.serviceStart = serviceStart
        this.serviceEnd = serviceEnd
        this.blockId = blockId
        this.blockStart = blockStart
        this.blockEnd = blockEnd
        this.preparingTime = preparingTime
        this.finishingTime = finishingTime
        this.vehicleJourneyId = vehicleJourneyId
        this.journeyStart = journeyStart
        this.journeyEnd = journeyEnd
        this.journeyFirstStopDeparture = journeyFirstStopDeparture
        this.journeyLastStopArrival = journeyLastStopArrival
        this.turnaroundTime = turnaroundTime
        this.layoverTime = layoverTime
        this.timetabledPassingTimeId = timetabledPassingTimeId
        this.stopDepartureTime = stopDepartureTime
        this.stopArrivalTime = stopArrivalTime
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised GetVehicleServiceTimingDataRecord
     */
    constructor(value: fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.GetVehicleServiceTimingData?): this() {
        if (value != null) {
            this.vehicleServiceId = value.vehicleServiceId
            this.serviceStart = value.serviceStart
            this.serviceEnd = value.serviceEnd
            this.blockId = value.blockId
            this.blockStart = value.blockStart
            this.blockEnd = value.blockEnd
            this.preparingTime = value.preparingTime
            this.finishingTime = value.finishingTime
            this.vehicleJourneyId = value.vehicleJourneyId
            this.journeyStart = value.journeyStart
            this.journeyEnd = value.journeyEnd
            this.journeyFirstStopDeparture = value.journeyFirstStopDeparture
            this.journeyLastStopArrival = value.journeyLastStopArrival
            this.turnaroundTime = value.turnaroundTime
            this.layoverTime = value.layoverTime
            this.timetabledPassingTimeId = value.timetabledPassingTimeId
            this.stopDepartureTime = value.stopDepartureTime
            this.stopArrivalTime = value.stopArrivalTime
            resetChangedOnNotNull()
        }
    }
}
