/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.vehicle_schedule.tables.records


import fi.hsl.jore.jore4.jooq.vehicle_schedule.tables.VehicleScheduleFrame

import java.time.LocalDate
import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.Field
import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.impl.UpdatableRecordImpl


/**
 * A coherent set of BLOCKS, COMPOUND BLOCKs, COURSEs of JOURNEY and VEHICLE
 * SCHEDULEs to which the same set of VALIDITY CONDITIONs have been assigned.
 * Transmodel: https://www.transmodel-cen.eu/model/index.htm?goto=3:7:2:993 
 */
@Suppress("UNCHECKED_CAST")
open class VehicleScheduleFrameRecord() : UpdatableRecordImpl<VehicleScheduleFrameRecord>(VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME), Record10<UUID?, JSONB?, LocalDate?, LocalDate?, Int?, String?, String?, JSONB?, Any?, OffsetDateTime?> {

    open var vehicleScheduleFrameId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var nameI18n: JSONB?
        set(value): Unit = set(1, value)
        get(): JSONB? = get(1) as JSONB?

    open var validityStart: LocalDate?
        set(value): Unit = set(2, value)
        get(): LocalDate? = get(2) as LocalDate?

    open var validityEnd: LocalDate?
        set(value): Unit = set(3, value)
        get(): LocalDate? = get(3) as LocalDate?

    open var priority: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var label: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var bookingLabel: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var bookingDescriptionI18n: JSONB?
        set(value): Unit = set(7, value)
        get(): JSONB? = get(7) as JSONB?

    open var validityRange: Any?
        set(value): Unit = set(8, value)
        get(): Any? = get(8) as Any?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(9, value)
        get(): OffsetDateTime? = get(9) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row10<UUID?, JSONB?, LocalDate?, LocalDate?, Int?, String?, String?, JSONB?, Any?, OffsetDateTime?> = super.fieldsRow() as Row10<UUID?, JSONB?, LocalDate?, LocalDate?, Int?, String?, String?, JSONB?, Any?, OffsetDateTime?>
    override fun valuesRow(): Row10<UUID?, JSONB?, LocalDate?, LocalDate?, Int?, String?, String?, JSONB?, Any?, OffsetDateTime?> = super.valuesRow() as Row10<UUID?, JSONB?, LocalDate?, LocalDate?, Int?, String?, String?, JSONB?, Any?, OffsetDateTime?>
    override fun field1(): Field<UUID?> = VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME.VEHICLE_SCHEDULE_FRAME_ID
    override fun field2(): Field<JSONB?> = VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME.NAME_I18N
    override fun field3(): Field<LocalDate?> = VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME.VALIDITY_START
    override fun field4(): Field<LocalDate?> = VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME.VALIDITY_END
    override fun field5(): Field<Int?> = VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME.PRIORITY
    override fun field6(): Field<String?> = VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME.LABEL
    override fun field7(): Field<String?> = VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME.BOOKING_LABEL
    override fun field8(): Field<JSONB?> = VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME.BOOKING_DESCRIPTION_I18N
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun field9(): Field<Any?> = VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME.VALIDITY_RANGE
    override fun field10(): Field<OffsetDateTime?> = VehicleScheduleFrame.VEHICLE_SCHEDULE_FRAME.CREATED_AT
    override fun component1(): UUID? = vehicleScheduleFrameId
    override fun component2(): JSONB? = nameI18n
    override fun component3(): LocalDate? = validityStart
    override fun component4(): LocalDate? = validityEnd
    override fun component5(): Int? = priority
    override fun component6(): String? = label
    override fun component7(): String? = bookingLabel
    override fun component8(): JSONB? = bookingDescriptionI18n
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun component9(): Any? = validityRange
    override fun component10(): OffsetDateTime? = createdAt
    override fun value1(): UUID? = vehicleScheduleFrameId
    override fun value2(): JSONB? = nameI18n
    override fun value3(): LocalDate? = validityStart
    override fun value4(): LocalDate? = validityEnd
    override fun value5(): Int? = priority
    override fun value6(): String? = label
    override fun value7(): String? = bookingLabel
    override fun value8(): JSONB? = bookingDescriptionI18n
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun value9(): Any? = validityRange
    override fun value10(): OffsetDateTime? = createdAt

    override fun value1(value: UUID?): VehicleScheduleFrameRecord {
        set(0, value)
        return this
    }

    override fun value2(value: JSONB?): VehicleScheduleFrameRecord {
        set(1, value)
        return this
    }

    override fun value3(value: LocalDate?): VehicleScheduleFrameRecord {
        set(2, value)
        return this
    }

    override fun value4(value: LocalDate?): VehicleScheduleFrameRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Int?): VehicleScheduleFrameRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): VehicleScheduleFrameRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): VehicleScheduleFrameRecord {
        set(6, value)
        return this
    }

    override fun value8(value: JSONB?): VehicleScheduleFrameRecord {
        set(7, value)
        return this
    }

    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun value9(value: Any?): VehicleScheduleFrameRecord {
        set(8, value)
        return this
    }

    override fun value10(value: OffsetDateTime?): VehicleScheduleFrameRecord {
        set(9, value)
        return this
    }

    override fun values(value1: UUID?, value2: JSONB?, value3: LocalDate?, value4: LocalDate?, value5: Int?, value6: String?, value7: String?, value8: JSONB?, value9: Any?, value10: OffsetDateTime?): VehicleScheduleFrameRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        return this
    }

    /**
     * Create a detached, initialised VehicleScheduleFrameRecord
     */
    constructor(vehicleScheduleFrameId: UUID? = null, nameI18n: JSONB? = null, validityStart: LocalDate? = null, validityEnd: LocalDate? = null, priority: Int? = null, label: String? = null, bookingLabel: String? = null, bookingDescriptionI18n: JSONB? = null, validityRange: Any? = null, createdAt: OffsetDateTime? = null): this() {
        this.vehicleScheduleFrameId = vehicleScheduleFrameId
        this.nameI18n = nameI18n
        this.validityStart = validityStart
        this.validityEnd = validityEnd
        this.priority = priority
        this.label = label
        this.bookingLabel = bookingLabel
        this.bookingDescriptionI18n = bookingDescriptionI18n
        this.validityRange = validityRange
        this.createdAt = createdAt
        resetChangedOnNotNull()
    }
}
