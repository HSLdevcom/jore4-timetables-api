/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.service_calendar.tables.daos


import fi.hsl.jore.jore4.jooq.AbstractSpringDAOImpl
import fi.hsl.jore.jore4.jooq.service_calendar.tables.DayTypeActiveOnDayOfWeek
import fi.hsl.jore.jore4.jooq.service_calendar.tables.records.DayTypeActiveOnDayOfWeekRecord

import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.Record2
import org.springframework.stereotype.Repository


/**
 * Tells on which days of week a particular DAY TYPE is active
 */
@Suppress("UNCHECKED_CAST")
@Repository
open class DayTypeActiveOnDayOfWeekDao(configuration: Configuration?) : AbstractSpringDAOImpl<DayTypeActiveOnDayOfWeekRecord, fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayTypeActiveOnDayOfWeek, Record2<UUID?, Int?>>(DayTypeActiveOnDayOfWeek.DAY_TYPE_ACTIVE_ON_DAY_OF_WEEK, fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayTypeActiveOnDayOfWeek::class.java, configuration) {

    /**
     * Create a new DayTypeActiveOnDayOfWeekDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayTypeActiveOnDayOfWeek): Record2<UUID?, Int?> = compositeKeyRecord(o.dayTypeId, o.dayOfWeek)

    /**
     * Fetch records that have <code>day_type_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDayTypeId(lowerInclusive: UUID, upperInclusive: UUID): List<fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayTypeActiveOnDayOfWeek> = fetchRange(DayTypeActiveOnDayOfWeek.DAY_TYPE_ACTIVE_ON_DAY_OF_WEEK.DAY_TYPE_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>day_type_id IN (values)</code>
     */
    fun fetchByDayTypeId(vararg values: UUID): List<fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayTypeActiveOnDayOfWeek> = fetch(DayTypeActiveOnDayOfWeek.DAY_TYPE_ACTIVE_ON_DAY_OF_WEEK.DAY_TYPE_ID, *values)

    /**
     * Fetch records that have <code>day_of_week BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDayOfWeek(lowerInclusive: Int, upperInclusive: Int): List<fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayTypeActiveOnDayOfWeek> = fetchRange(DayTypeActiveOnDayOfWeek.DAY_TYPE_ACTIVE_ON_DAY_OF_WEEK.DAY_OF_WEEK, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>day_of_week IN (values)</code>
     */
    fun fetchByDayOfWeek(vararg values: Int): List<fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayTypeActiveOnDayOfWeek> = fetch(DayTypeActiveOnDayOfWeek.DAY_TYPE_ACTIVE_ON_DAY_OF_WEEK.DAY_OF_WEEK, *values.toTypedArray())
}
