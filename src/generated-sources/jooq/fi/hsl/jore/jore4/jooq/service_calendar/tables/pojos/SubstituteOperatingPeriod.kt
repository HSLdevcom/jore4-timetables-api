/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos


import java.io.Serializable
import java.util.UUID


/**
 * Models substitute operating period that consists of substitute operating days
 * by line types.
 */
@Suppress("UNCHECKED_CAST")
data class SubstituteOperatingPeriod(
    var substituteOperatingPeriodId: UUID? = null,
    var periodName: String,
    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsPreset")
    var isPreset: Boolean? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: SubstituteOperatingPeriod = other as SubstituteOperatingPeriod
        if (this.substituteOperatingPeriodId == null) {
            if (o.substituteOperatingPeriodId != null)
                return false
        }
        else if (this.substituteOperatingPeriodId != o.substituteOperatingPeriodId)
            return false
        if (this.periodName != o.periodName)
            return false
        if (this.isPreset == null) {
            if (o.isPreset != null)
                return false
        }
        else if (this.isPreset != o.isPreset)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.substituteOperatingPeriodId == null) 0 else this.substituteOperatingPeriodId.hashCode())
        result = prime * result + this.periodName.hashCode()
        result = prime * result + (if (this.isPreset == null) 0 else this.isPreset.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("SubstituteOperatingPeriod (")

        sb.append(substituteOperatingPeriodId)
        sb.append(", ").append(periodName)
        sb.append(", ").append(isPreset)

        sb.append(")")
        return sb.toString()
    }
}
