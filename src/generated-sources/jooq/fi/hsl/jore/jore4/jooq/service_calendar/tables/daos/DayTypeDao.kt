/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.service_calendar.tables.daos


import fi.hsl.jore.jore4.jooq.AbstractSpringDAOImpl
import fi.hsl.jore.jore4.jooq.service_calendar.tables.DayType
import fi.hsl.jore.jore4.jooq.service_calendar.tables.records.DayTypeRecord

import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.JSONB
import org.springframework.stereotype.Repository


/**
 * A type of day characterised by one or more properties which affect public
 * transport operation. For example: weekday in school holidays. Transmodel:
 * https://www.transmodel-cen.eu/model/index.htm?goto=1:6:3:299 
 */
@Suppress("UNCHECKED_CAST")
@Repository
open class DayTypeDao(configuration: Configuration?) : AbstractSpringDAOImpl<DayTypeRecord, fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayType, UUID>(DayType.DAY_TYPE, fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayType::class.java, configuration) {

    /**
     * Create a new DayTypeDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayType): UUID? = o.dayTypeId

    /**
     * Fetch records that have <code>day_type_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDayTypeId(lowerInclusive: UUID?, upperInclusive: UUID?): List<fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayType> = fetchRange(DayType.DAY_TYPE.DAY_TYPE_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>day_type_id IN (values)</code>
     */
    fun fetchByDayTypeId(vararg values: UUID): List<fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayType> = fetch(DayType.DAY_TYPE.DAY_TYPE_ID, *values)

    /**
     * Fetch a unique record that has <code>day_type_id = value</code>
     */
    fun fetchOneByDayTypeId(value: UUID): fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayType? = fetchOne(DayType.DAY_TYPE.DAY_TYPE_ID, value)

    /**
     * Fetch records that have <code>label BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfLabel(lowerInclusive: String, upperInclusive: String): List<fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayType> = fetchRange(DayType.DAY_TYPE.LABEL, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>label IN (values)</code>
     */
    fun fetchByLabel(vararg values: String): List<fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayType> = fetch(DayType.DAY_TYPE.LABEL, *values)

    /**
     * Fetch records that have <code>name_i18n BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfNameI18n(lowerInclusive: JSONB, upperInclusive: JSONB): List<fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayType> = fetchRange(DayType.DAY_TYPE.NAME_I18N, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>name_i18n IN (values)</code>
     */
    fun fetchByNameI18n(vararg values: JSONB): List<fi.hsl.jore.jore4.jooq.service_calendar.tables.pojos.DayType> = fetch(DayType.DAY_TYPE.NAME_I18N, *values)
}
