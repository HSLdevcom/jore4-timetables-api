/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.vehicle_service.tables.daos


import fi.hsl.jore.jore4.jooq.AbstractSpringDAOImpl
import fi.hsl.jore.jore4.jooq.vehicle_service.tables.VehicleService
import fi.hsl.jore.jore4.jooq.vehicle_service.tables.records.VehicleServiceRecord

import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.JSONB
import org.springframework.stereotype.Repository


/**
 * A work plan for a single vehicle for a whole day, planned for a specific DAY
 * TYPE. A VEHICLE SERVICE includes one or several BLOCKs. If there is no
 * service on a given day, it does not include any BLOCKs. Transmodel:
 * https://www.transmodel-cen.eu/model/index.htm?goto=3:5:965 
 */
@Suppress("UNCHECKED_CAST")
@Repository
open class VehicleServiceDao(configuration: Configuration?) : AbstractSpringDAOImpl<VehicleServiceRecord, fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService, UUID>(VehicleService.VEHICLE_SERVICE_, fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService::class.java, configuration) {

    /**
     * Create a new VehicleServiceDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService): UUID? = o.vehicleServiceId

    /**
     * Fetch records that have <code>vehicle_service_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    fun fetchRangeOfVehicleServiceId(lowerInclusive: UUID?, upperInclusive: UUID?): List<fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService> = fetchRange(VehicleService.VEHICLE_SERVICE_.VEHICLE_SERVICE_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vehicle_service_id IN (values)</code>
     */
    fun fetchByVehicleServiceId(vararg values: UUID): List<fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService> = fetch(VehicleService.VEHICLE_SERVICE_.VEHICLE_SERVICE_ID, *values)

    /**
     * Fetch a unique record that has <code>vehicle_service_id = value</code>
     */
    fun fetchOneByVehicleServiceId(value: UUID): fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService? = fetchOne(VehicleService.VEHICLE_SERVICE_.VEHICLE_SERVICE_ID, value)

    /**
     * Fetch records that have <code>day_type_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDayTypeId(lowerInclusive: UUID, upperInclusive: UUID): List<fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService> = fetchRange(VehicleService.VEHICLE_SERVICE_.DAY_TYPE_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>day_type_id IN (values)</code>
     */
    fun fetchByDayTypeId(vararg values: UUID): List<fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService> = fetch(VehicleService.VEHICLE_SERVICE_.DAY_TYPE_ID, *values)

    /**
     * Fetch records that have <code>vehicle_schedule_frame_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfVehicleScheduleFrameId(lowerInclusive: UUID, upperInclusive: UUID): List<fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService> = fetchRange(VehicleService.VEHICLE_SERVICE_.VEHICLE_SCHEDULE_FRAME_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vehicle_schedule_frame_id IN
     * (values)</code>
     */
    fun fetchByVehicleScheduleFrameId(vararg values: UUID): List<fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService> = fetch(VehicleService.VEHICLE_SERVICE_.VEHICLE_SCHEDULE_FRAME_ID, *values)

    /**
     * Fetch records that have <code>name_i18n BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfNameI18n(lowerInclusive: JSONB?, upperInclusive: JSONB?): List<fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService> = fetchRange(VehicleService.VEHICLE_SERVICE_.NAME_I18N, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>name_i18n IN (values)</code>
     */
    fun fetchByNameI18n(vararg values: JSONB): List<fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos.VehicleService> = fetch(VehicleService.VEHICLE_SERVICE_.NAME_I18N, *values)
}
