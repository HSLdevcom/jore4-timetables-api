/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.vehicle_schedule.tables.records


import fi.hsl.jore.jore4.jooq.vehicle_schedule.tables.GetOverlappingSchedules

import java.util.UUID

import org.jooq.Field
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GetOverlappingSchedulesRecord() : TableRecordImpl<GetOverlappingSchedulesRecord>(GetOverlappingSchedules.GET_OVERLAPPING_SCHEDULES), Record8<UUID?, UUID?, UUID?, Int?, Int?, Any?, Any?, Any?> {

    open var currentVehicleScheduleFrameId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var otherVehicleScheduleFrameId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var journeyPatternId: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    open var activeOnDayOfWeek: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var priority: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var currentValidityRange: Any?
        set(value): Unit = set(5, value)
        get(): Any? = get(5) as Any?

    open var otherValidityRange: Any?
        set(value): Unit = set(6, value)
        get(): Any? = get(6) as Any?

    open var validityIntersection: Any?
        set(value): Unit = set(7, value)
        get(): Any? = get(7) as Any?

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<UUID?, UUID?, UUID?, Int?, Int?, Any?, Any?, Any?> = super.fieldsRow() as Row8<UUID?, UUID?, UUID?, Int?, Int?, Any?, Any?, Any?>
    override fun valuesRow(): Row8<UUID?, UUID?, UUID?, Int?, Int?, Any?, Any?, Any?> = super.valuesRow() as Row8<UUID?, UUID?, UUID?, Int?, Int?, Any?, Any?, Any?>
    override fun field1(): Field<UUID?> = GetOverlappingSchedules.GET_OVERLAPPING_SCHEDULES.CURRENT_VEHICLE_SCHEDULE_FRAME_ID
    override fun field2(): Field<UUID?> = GetOverlappingSchedules.GET_OVERLAPPING_SCHEDULES.OTHER_VEHICLE_SCHEDULE_FRAME_ID
    override fun field3(): Field<UUID?> = GetOverlappingSchedules.GET_OVERLAPPING_SCHEDULES.JOURNEY_PATTERN_ID
    override fun field4(): Field<Int?> = GetOverlappingSchedules.GET_OVERLAPPING_SCHEDULES.ACTIVE_ON_DAY_OF_WEEK
    override fun field5(): Field<Int?> = GetOverlappingSchedules.GET_OVERLAPPING_SCHEDULES.PRIORITY
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun field6(): Field<Any?> = GetOverlappingSchedules.GET_OVERLAPPING_SCHEDULES.CURRENT_VALIDITY_RANGE
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun field7(): Field<Any?> = GetOverlappingSchedules.GET_OVERLAPPING_SCHEDULES.OTHER_VALIDITY_RANGE
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun field8(): Field<Any?> = GetOverlappingSchedules.GET_OVERLAPPING_SCHEDULES.VALIDITY_INTERSECTION
    override fun component1(): UUID? = currentVehicleScheduleFrameId
    override fun component2(): UUID? = otherVehicleScheduleFrameId
    override fun component3(): UUID? = journeyPatternId
    override fun component4(): Int? = activeOnDayOfWeek
    override fun component5(): Int? = priority
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun component6(): Any? = currentValidityRange
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun component7(): Any? = otherValidityRange
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun component8(): Any? = validityIntersection
    override fun value1(): UUID? = currentVehicleScheduleFrameId
    override fun value2(): UUID? = otherVehicleScheduleFrameId
    override fun value3(): UUID? = journeyPatternId
    override fun value4(): Int? = activeOnDayOfWeek
    override fun value5(): Int? = priority
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun value6(): Any? = currentValidityRange
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun value7(): Any? = otherValidityRange
    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun value8(): Any? = validityIntersection

    override fun value1(value: UUID?): GetOverlappingSchedulesRecord {
        set(0, value)
        return this
    }

    override fun value2(value: UUID?): GetOverlappingSchedulesRecord {
        set(1, value)
        return this
    }

    override fun value3(value: UUID?): GetOverlappingSchedulesRecord {
        set(2, value)
        return this
    }

    override fun value4(value: Int?): GetOverlappingSchedulesRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Int?): GetOverlappingSchedulesRecord {
        set(4, value)
        return this
    }

    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun value6(value: Any?): GetOverlappingSchedulesRecord {
        set(5, value)
        return this
    }

    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun value7(value: Any?): GetOverlappingSchedulesRecord {
        set(6, value)
        return this
    }

    @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun value8(value: Any?): GetOverlappingSchedulesRecord {
        set(7, value)
        return this
    }

    override fun values(value1: UUID?, value2: UUID?, value3: UUID?, value4: Int?, value5: Int?, value6: Any?, value7: Any?, value8: Any?): GetOverlappingSchedulesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised GetOverlappingSchedulesRecord
     */
    constructor(currentVehicleScheduleFrameId: UUID? = null, otherVehicleScheduleFrameId: UUID? = null, journeyPatternId: UUID? = null, activeOnDayOfWeek: Int? = null, priority: Int? = null, currentValidityRange: Any? = null, otherValidityRange: Any? = null, validityIntersection: Any? = null): this() {
        this.currentVehicleScheduleFrameId = currentVehicleScheduleFrameId
        this.otherVehicleScheduleFrameId = otherVehicleScheduleFrameId
        this.journeyPatternId = journeyPatternId
        this.activeOnDayOfWeek = activeOnDayOfWeek
        this.priority = priority
        this.currentValidityRange = currentValidityRange
        this.otherValidityRange = otherValidityRange
        this.validityIntersection = validityIntersection
        resetChangedOnNotNull()
    }
}
