/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.vehicle_schedule.tables.records


import fi.hsl.jore.jore4.jooq.vehicle_schedule.tables.GetOverlappingSchedules

import java.util.UUID

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GetOverlappingSchedulesRecord private constructor() : TableRecordImpl<GetOverlappingSchedulesRecord>(GetOverlappingSchedules.GET_OVERLAPPING_SCHEDULES) {

    open var currentVehicleScheduleFrameId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var otherVehicleScheduleFrameId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var journeyPatternId: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    open var activeOnDayOfWeek: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var priority: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var currentValidityRange: Any?
        set(value): Unit = set(5, value)
        get(): Any? = get(5) as Any?

    open var otherValidityRange: Any?
        set(value): Unit = set(6, value)
        get(): Any? = get(6) as Any?

    open var validityIntersection: Any?
        set(value): Unit = set(7, value)
        get(): Any? = get(7) as Any?

    /**
     * Create a detached, initialised GetOverlappingSchedulesRecord
     */
    constructor(currentVehicleScheduleFrameId: UUID? = null, otherVehicleScheduleFrameId: UUID? = null, journeyPatternId: UUID? = null, activeOnDayOfWeek: Int? = null, priority: Int? = null, currentValidityRange: Any? = null, otherValidityRange: Any? = null, validityIntersection: Any? = null): this() {
        this.currentVehicleScheduleFrameId = currentVehicleScheduleFrameId
        this.otherVehicleScheduleFrameId = otherVehicleScheduleFrameId
        this.journeyPatternId = journeyPatternId
        this.activeOnDayOfWeek = activeOnDayOfWeek
        this.priority = priority
        this.currentValidityRange = currentValidityRange
        this.otherValidityRange = otherValidityRange
        this.validityIntersection = validityIntersection
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised GetOverlappingSchedulesRecord
     */
    constructor(value: fi.hsl.jore.jore4.jooq.vehicle_schedule.tables.pojos.GetOverlappingSchedules?): this() {
        if (value != null) {
            this.currentVehicleScheduleFrameId = value.currentVehicleScheduleFrameId
            this.otherVehicleScheduleFrameId = value.otherVehicleScheduleFrameId
            this.journeyPatternId = value.journeyPatternId
            this.activeOnDayOfWeek = value.activeOnDayOfWeek
            this.priority = value.priority
            this.currentValidityRange = value.currentValidityRange
            this.otherValidityRange = value.otherValidityRange
            this.validityIntersection = value.validityIntersection
            resetChangedOnNotNull()
        }
    }
}
