/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.route.tables.records


import fi.hsl.jore.jore4.jooq.route.tables.Direction

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * The route directions from Transmodel
 */
@Suppress("UNCHECKED_CAST")
open class DirectionRecord private constructor() : UpdatableRecordImpl<DirectionRecord>(Direction.DIRECTION) {

    open var direction: String
        set(value): Unit = set(0, value)
        get(): String = get(0) as String

    open var theOppositeOfDirection: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised DirectionRecord
     */
    constructor(direction: String, theOppositeOfDirection: String? = null): this() {
        this.direction = direction
        this.theOppositeOfDirection = theOppositeOfDirection
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised DirectionRecord
     */
    constructor(value: fi.hsl.jore.jore4.jooq.route.tables.pojos.Direction?): this() {
        if (value != null) {
            this.direction = value.direction
            this.theOppositeOfDirection = value.theOppositeOfDirection
            resetChangedOnNotNull()
        }
    }
}
