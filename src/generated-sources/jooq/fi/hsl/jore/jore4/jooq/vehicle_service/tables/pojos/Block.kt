/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.vehicle_service.tables.pojos


import java.io.Serializable
import java.util.UUID

import org.jooq.types.YearToSecond


/**
 * The work of a vehicle from the time it leaves a PARKING POINT after parking
 * until its next return to park at a PARKING POINT. Any subsequent departure
 * from a PARKING POINT after parking marks the start of a new BLOCK. The period
 * of a BLOCK has to be covered by DUTies. Transmodel:
 * https://www.transmodel-cen.eu/model/index.htm?goto=3:5:958 
 */
@Suppress("UNCHECKED_CAST")
data class Block(
    var blockId: UUID? = null,
    var vehicleServiceId: UUID,
    var preparingTime: YearToSecond? = null,
    var finishingTime: YearToSecond? = null,
    var vehicleTypeId: UUID? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Block = other as Block
        if (this.blockId == null) {
            if (o.blockId != null)
                return false
        }
        else if (this.blockId != o.blockId)
            return false
        if (this.vehicleServiceId != o.vehicleServiceId)
            return false
        if (this.preparingTime == null) {
            if (o.preparingTime != null)
                return false
        }
        else if (this.preparingTime != o.preparingTime)
            return false
        if (this.finishingTime == null) {
            if (o.finishingTime != null)
                return false
        }
        else if (this.finishingTime != o.finishingTime)
            return false
        if (this.vehicleTypeId == null) {
            if (o.vehicleTypeId != null)
                return false
        }
        else if (this.vehicleTypeId != o.vehicleTypeId)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.blockId == null) 0 else this.blockId.hashCode())
        result = prime * result + this.vehicleServiceId.hashCode()
        result = prime * result + (if (this.preparingTime == null) 0 else this.preparingTime.hashCode())
        result = prime * result + (if (this.finishingTime == null) 0 else this.finishingTime.hashCode())
        result = prime * result + (if (this.vehicleTypeId == null) 0 else this.vehicleTypeId.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Block (")

        sb.append(blockId)
        sb.append(", ").append(vehicleServiceId)
        sb.append(", ").append(preparingTime)
        sb.append(", ").append(finishingTime)
        sb.append(", ").append(vehicleTypeId)

        sb.append(")")
        return sb.toString()
    }
}
